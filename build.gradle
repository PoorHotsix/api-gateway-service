plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.inkcloud'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.1")
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-webflux'                    // Spring Boot Webflux
    //implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'              // bootstrap.yml 사용하는 경우 반드시 설정해야 한다.
    implementation 'org.springframework.cloud:spring-cloud-config-client'                  // Spring Cloud Config Client    
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'                  // Spring Cloud API Gateway Server
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'    // Spring Cloud Eureka Client
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-security'                 //Spring Security 
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'   //JWT 인증
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'  		   //tokenrealy 필수
}

tasks.named('test') {
	useJUnitPlatform()
}
